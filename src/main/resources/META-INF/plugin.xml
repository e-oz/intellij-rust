<idea-plugin version="2">
    <id>org.rust.lang</id>
    <name>Rust</name>

    <vendor url="https://github.com/intellij-rust/intellij-rust"/>

    <description><![CDATA[
      Rust language support
    ]]></description>

    <change-notes><![CDATA[
        <a href="https://intellij-rust.github.io/2016/11/14/changelog-18.html">
                 https://intellij-rust.github.io/2016/11/14/changelog-18.html
        </a>
    ]]>
    </change-notes>

    <!-- please see https://confluence.jetbrains.com/display/IDEADEV/Build+Number+Ranges for description -->
    <idea-version since-build="143.2287.1" until-build="163.*"/>

    <!-- please see https://confluence.jetbrains.com/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
         on how to target different products -->

    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="idea-only.xml">com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">

        <!-- Rust -->

        <!-- File-type Factory -->

        <fileTypeFactory implementation="org.rust.lang.RustFileTypeFactory"/>

        <!-- Parser -->

        <lang.parserDefinition language="Rust" implementationClass="org.rust.lang.core.RustParserDefinition"/>
        <stubElementTypeHolder class="org.rust.lang.core.psi.RustCompositeElementTypes"/>

        <!-- Syntax Highlighter -->

        <lang.syntaxHighlighterFactory language="Rust"
                                       implementationClass="org.rust.ide.highlight.RustHighlighterFactory"/>

        <!-- Formatter -->

        <lang.formatter language="Rust" implementationClass="org.rust.ide.formatter.RustFormattingModelBuilder"/>

        <!-- Refactoring support -->

        <lang.refactoringSupport language="Rust"
                                 implementationClass="org.rust.lang.refactoring.RustRefactoringSupportProvider"/>

        <!-- Commenter -->

        <lang.commenter language="Rust" implementationClass="org.rust.ide.commenter.RustCommenter"/>

        <!-- Matchers -->

        <lang.braceMatcher language="Rust" implementationClass="org.rust.ide.typing.RustBraceMatcher"/>
        <lang.quoteHandler language="Rust" implementationClass="org.rust.ide.typing.RustQuoteHandler"/>

        <!-- Doc-Provider -->

        <lang.documentationProvider language="Rust" implementationClass="org.rust.ide.docs.RustDocumentationProvider"/>

        <!-- Structure View -->

        <lang.psiStructureViewFactory language="Rust"
                                      implementationClass="org.rust.ide.structure.RustPsiStructureViewFactory"/>

        <!-- Usages Provider -->

        <lang.findUsagesProvider language="Rust" implementationClass="org.rust.ide.search.RustFindUsagesProvider"/>

        <!-- Smart Enter Processor -->
        <lang.smartEnterProcessor language="Rust"
                                  implementationClass="org.rust.ide.typing.assist.RustSmartEnterProcessor"/>

        <!-- Navigation -->

        <gotoClassContributor implementation="org.rust.ide.navigation.goto.RustClassNavigationContributor"/>
        <gotoSymbolContributor implementation="org.rust.ide.navigation.goto.RustSymbolNavigationContributor"/>
        <codeInsight.gotoSuper language="Rust" implementationClass="org.rust.ide.navigation.goto.RustGotoSuperHandler"/>

        <!-- Hints -->

        <codeInsight.typeInfo language="Rust" implementationClass="org.rust.ide.hints.RustExpressionTypeProvider"/>

        <!-- Annotator -->

        <annotator language="Rust" implementationClass="org.rust.ide.annotator.RustHighlightingAnnotator"/>
        <annotator language="Rust" implementationClass="org.rust.ide.annotator.RustLiteralAnnotator"/>
        <annotator language="Rust" implementationClass="org.rust.ide.annotator.RustExpressionAnnotator"/>
        <annotator language="Rust" implementationClass="org.rust.ide.annotator.RustItemsAnnotator"/>
        <annotator language="Rust" implementationClass="org.rust.ide.annotator.RustInvalidSyntaxAnnotator"/>

        <!-- Line Marker Providers -->

        <codeInsight.lineMarkerProvider language="Rust"
                                        implementationClass="org.rust.ide.annotator.RustTraitLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="Rust"
                                        implementationClass="org.rust.ide.annotator.RustRecursiveCallLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="Rust"
                                        implementationClass="org.rust.ide.annotator.RustTraitMethodImplLineMarkerProvider"/>

        <!-- Completion -->

        <completion.contributor language="Rust"
                                implementationClass="org.rust.lang.core.completion.RustCompletionContributor"/>

        <!-- Description Provider -->

        <elementDescriptionProvider implementation="org.rust.ide.RustDescriptionProvider"/>

        <!-- Spell-checker -->

        <spellchecker.support language="Rust" implementationClass="org.rust.ide.spelling.RustSpellcheckingStrategy"/>

        <!-- Handlers -->

        <enterHandlerDelegate implementation="org.rust.ide.typing.RustEnterInLineCommentHandler"
                              id="RustEnterInLineComments"/>

        <typedHandler implementation="org.rust.ide.typing.RustRawLiteralHashesInserter"
                      id="RustRawLiteralHashesInserter"/>

        <backspaceHandlerDelegate implementation="org.rust.ide.typing.RustRawLiteralHashesDeleter"
                                  id="RustRawLiteralHashesDeleter"/>

        <joinLinesHandler implementation="org.rust.ide.actions.RustStringLiteralJoinLinesHandler"
                          id="RustStringLiteralJoinLinesHandler"/>

        <!-- Code Style -->

        <codeStyleSettingsProvider implementation="org.rust.ide.formatter.settings.RustCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
            implementation="org.rust.ide.formatter.settings.RustLanguageCodeStyleSettingsProvider"/>

        <!-- Color Settings -->

        <colorSettingsPage implementation="org.rust.ide.colors.RustColorSettingsPage"/>

        <additionalTextAttributes scheme="Default" file="org/rust/ide/colors/RustDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="org/rust/ide/colors/RustDarcula.xml"/>

        <!-- Inspections -->

        <lang.inspectionSuppressor language="Rust"
                                   implementationClass="org.rust.ide.inspections.RustInspectionSuppressor"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="Approximate Constants"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustApproxConstantInspection"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="Unsafe CString pointer"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustCStringPointerInspection"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="Unresolved reference"
                         enabledByDefault="false" level="ERROR"
                         implementationClass="org.rust.ide.inspections.RustUnresolvedReferenceInspection"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="Double negation"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustDoubleNegInspection"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="Suspicious assignment"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustSuspiciousAssignmentInspection"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="Dangling else"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustDanglingElseInspection"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="Missing else"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustMissingElseInspection"/>

        <localInspection language="Rust" groupName="Redeclared symbols"
                         displayName="Duplicate field"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.rust.ide.inspections.duplicates.RustDuplicateStructFieldInspection"/>

        <localInspection language="Rust" groupName="Redeclared symbols"
                         displayName="Duplicate trait constant"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.rust.ide.inspections.duplicates.RustDuplicateTraitConstantInspection"/>

        <localInspection language="Rust" groupName="Redeclared symbols"
                         displayName="Duplicate trait method"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.rust.ide.inspections.duplicates.RustDuplicateTraitMethodInspection"/>

        <localInspection language="Rust" groupName="Redeclared symbols"
                         displayName="Duplicate trait associated type"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.rust.ide.inspections.duplicates.RustDuplicateTraitTypeInspection"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="Dropping reference"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustDropRefInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Argument naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustArgumentNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Associated type naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustAssocTypeNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Constant naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustConstNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Enum naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustEnumNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Enum variant naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustEnumVariantNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Function naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustFunctionNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Lifetime naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustLifetimeNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Macro naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustMacroNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Method naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustMethodNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Module naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustModuleNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Static constant naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustStaticConstNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Self convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustSelfConventionInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Struct naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustStructNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Field naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustFieldNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Trait naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustTraitNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Type alias naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustTypeAliasNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Type parameter naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustTypeParameterNamingInspection"/>

        <localInspection language="Rust" groupPath="Rust" groupName="Naming conventions"
                         displayName="Variable naming convention"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustVariableNamingInspection"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="Extra semicolon"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="org.rust.ide.inspections.RustExtraSemicolonInspection"/>

        <localInspection language="Rust" groupName="Rust"
                         displayName="try! macro usage"
                         enabledByDefault="true" level="WEAK WARNING"
                         implementationClass="org.rust.ide.inspections.RustTryMacroInspection"/>

        <!-- Surrounders -->

        <lang.surroundDescriptor language="Rust"
                                 implementationClass="org.rust.ide.surroundWith.expression.RustExpressionSurroundDescriptor"/>
        <lang.surroundDescriptor language="Rust"
                                 implementationClass="org.rust.ide.surroundWith.statement.RustStatementsSurroundDescriptor"/>

        <!-- Folding -->

        <lang.foldingBuilder language="Rust" implementationClass="org.rust.ide.folding.RustFoldingBuilder"/>

        <!-- Live Templates -->

        <defaultLiveTemplatesProvider implementation="org.rust.ide.template.RustLiveTemplatesProvider"/>

        <liveTemplateContext implementation="org.rust.ide.template.RustContextType$Generic"/>
        <liveTemplateContext implementation="org.rust.ide.template.RustContextType$Statement"/>
        <liveTemplateContext implementation="org.rust.ide.template.RustContextType$Item"/>
        <liveTemplateContext implementation="org.rust.ide.template.RustContextType$Struct"/>
        <liveTemplateContext implementation="org.rust.ide.template.RustContextType$Mod"/>
        <liveTemplateContext implementation="org.rust.ide.template.RustContextType$Attribute"/>

        <liveTemplateMacro implementation="org.rust.ide.template.macros.RustSuggestIndexNameMacro"/>
        <liveTemplateMacro implementation="org.rust.ide.template.macros.RustCollectionElementNameMacro"/>

        <!-- Intentions -->

        <intentionAction>
            <className>org.rust.ide.intentions.ContractModuleIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.ExtractInlineModuleIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.AddDeriveIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.RemoveCurlyBracesIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.AddCurlyBracesIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.RemoveParenthesesFromExprIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.WrapLambdaExprIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.UnwrapSingleExprIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.DemorgansLawIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.AddElseIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.MoveTypeConstraintToWhereClauseIntention</className>
            <category>Rust</category>
        </intentionAction>
        <intentionAction>
            <className>org.rust.ide.intentions.MatchToIfLetIntention</className>
            <category>Rust</category>
        </intentionAction>

        <!-- Run Configurations -->

        <programRunner implementation="org.rust.cargo.runconfig.RustRunner"/>
        <configurationType implementation="org.rust.cargo.runconfig.CargoCommandRunConfigurationType"/>
        <runConfigurationProducer
            implementation="org.rust.cargo.runconfig.producers.CargoExecutableRunConfigurationProducer"/>
        <runConfigurationProducer
            implementation="org.rust.cargo.runconfig.producers.CargoTestRunConfigurationProducer"/>

        <runLineMarkerContributor language="Rust"
                                  implementationClass="org.rust.cargo.runconfig.RustRunLineMarkerContributor"/>

        <!-- Cargo -->

        <projectConfigurable instance="org.rust.cargo.project.configurable.RustProjectConfigurable"
                             displayName="Rust"
                             groupId="language"/>
        <projectService serviceInterface="org.rust.cargo.project.settings.RustProjectSettingsService"
                        serviceImplementation="org.rust.cargo.project.settings.impl.RustProjectSettingsServiceImpl"/>


        <!-- Icon Provider -->

        <iconProvider implementation="org.rust.cargo.icons.CargoIconProvider"/>

        <!-- Indices -->

        <stubIndex implementation="org.rust.lang.core.stubs.index.RustModulesIndex"/>
        <stubIndex implementation="org.rust.lang.core.stubs.index.RustNamedElementIndex"/>
        <stubIndex implementation="org.rust.lang.core.stubs.index.RustGotoClassIndex"/>

        <stubIndex implementation="org.rust.lang.core.resolve.indexes.RustImplIndex$ByType"/>
        <stubIndex implementation="org.rust.lang.core.resolve.indexes.RustImplIndex$ByName"/>
        <stubIndex implementation="org.rust.lang.core.resolve.indexes.RustAliasIndex"/>

        <!-- Notification Providers -->

        <editorNotificationProvider implementation="org.rust.ide.notifications.MissingToolchainNotificationProvider"/>

        <!-- Editor Tab Title Providers -->

        <editorTabTitleProvider implementation="org.rust.ide.utils.RustModTabTitleProvider"/>

        <!-- Refactoring -->

        <lang.namesValidator language="Rust" implementationClass="org.rust.lang.refactoring.RustNamesValidator"/>

        <!-- Postfix templates -->
        <codeInsight.template.postfixTemplateProvider language="Rust"
                                                      implementationClass="org.rust.ide.template.postfix.RustPostfixTemplateProvider"/>

    </extensions>

    <application-components>
        <component>
            <implementation-class>org.rust.ide.update.UpdateComponent</implementation-class>
        </component>
    </application-components>

    <project-components>
        <!-- Add your project components here -->
    </project-components>

    <module-components>
        <component>
            <interface-class>org.rust.cargo.project.workspace.CargoProjectWorkspace</interface-class>
            <implementation-class>org.rust.cargo.project.workspace.impl.CargoProjectWorkspaceImpl</implementation-class>
        </component>
    </module-components>

    <actions>
        <action id="Rust.NewRustFile"
                class="org.rust.ide.actions.RustCreateFileAction"
                text="Rust File"
                description="Create new Rust file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>

        <action id="Rust.RefreshCargoProject"
                class="org.rust.ide.actions.RefreshCargoProjectAction"
                icon="AllIcons.Actions.Refresh"/>

        <action id="Rust.RustExpandModuleAction"
                class="org.rust.ide.actions.RustExpandModuleAction"
                text="Expand module"
                description="Move this module to a dedicated directory">
            <add-to-group group-id="RefactoringMenu"/>
        </action>

        <action id="Rust.CargoFmtFile"
                class="org.rust.ide.actions.RustFmtFileAction"
                text="Reformat file with rustfmt"
                description="Reformat current file with rustfmt">
            <add-to-group group-id="CodeMenu" anchor="last"/>
        </action>
    </actions>

</idea-plugin>
